package com.example.eatpoopyoucat.utilities

import com.example.eatpoopyoucat.data.Entry
import com.example.eatpoopyoucat.data.Game
import com.example.eatpoopyoucat.data.GameWithEntries
import org.apache.commons.codec.binary.Base64
import java.util.*

    val testGames = arrayListOf(
    Game(UUID.fromString("00000000-0000-0000-0000-000000000001"), 0, 0),
    Game(UUID.fromString("00000000-0000-0000-0000-000000000002"), 0, 0),
    Game(UUID.fromString("00000000-0000-0000-0000-000000000003"), 0, 0)
    )
    const val imageString = "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"

    val image = Base64.decodeBase64(imageString.toByteArray())!!;
    val testGame = testGames[0]
    val entities = arrayListOf(
        Entry(UUID.fromString("e0000000-0000-0000-0000-000000000001"),
            1,"My cat likes to eat wet food on their birthday",null, testGames[0].uid, 600),
        Entry(UUID.fromString("e0000000-0000-0000-0000-000000000002"),
            2,null, image, testGames[0].uid, 600),
        Entry(UUID.fromString("e0000000-0000-0000-0000-000000000003"),
            3,"some cats eat hockey pucks",null, testGames[0].uid, 600)
    )
    val gameWithEntries = GameWithEntries(testGame, entities)